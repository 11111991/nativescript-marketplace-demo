<Page xmlns="http://www.nativescript.org/tns.xsd"
    xmlns:drawer="nativescript-telerik-ui/sidedrawer"
    xmlns:sdc="views/side-drawer-content"
    cssClass="qsf-page"
    navigatingTo="onNavigatingTo"
    loaded="pageLoaded"
    backgroundSpanUnderStatusBar="true">
  <Page.actionBar>
    <ActionBar>
      <android>
        <NavigationButton icon="res://ic_menu" tap="showSlideout" />
      </android>
      <ActionBar.actionItems>
        <iOS>
          <ActionItem icon="res://ic_menu" ios.position="left" tap="showSlideout" />
        </iOS>
        <ActionItem icon="{{ useListLayout ? 'res://ic_wrap_view' : 'res://ic_list_view' }}" ios.position="right" tap="toggleWrapLayout" />
      </ActionBar.actionItems>
      <ActionBar.titleView>
        <!-- TODO: We should be able to center an image horizontally in android without using GridLayout -->
        <GridLayout>
          <Image src="res://logo_main" stretch="none" horizontalAlignment="center" android:margin="40 0 0 0" />
        </GridLayout>
      </ActionBar.titleView>
    </ActionBar>
  </Page.actionBar>
  <drawer:RadSideDrawer id="side-drawer">
    <drawer:RadSideDrawer.drawerContent>
      <sdc:side-drawer-content />
    </drawer:RadSideDrawer.drawerContent>
    <drawer:RadSideDrawer.mainContent>
      <GridLayout rows="auto, 44, *" columns="*">

        <GridLayout row="1" rowSpan="2" cssClass="content-background-main" />

        <!-- Segmented bar navigation -->
        <!-- TODO: I have failed to set the selectedBackgroundColor in CSS -->
        <SegmentedBar selectedIndex="{{ selectedScreen }}"
            cssClass="example-types-bar"
            ios:selectedBackgroundColor="#F5F5F5"
            android:selectedBackgroundColor="#00E676">
          <SegmentedBar.items>
            <SegmentedBarItem title="Featured examples" />
            <SegmentedBarItem title="All controls" />
          </SegmentedBar.items>
        </SegmentedBar>

        <!-- Show New filter -->
        <Button row="1"
          ios:text="{{ showOnlyNew ? 'Show all' : 'Show only new' }}"
          android:text="{{ showOnlyNew ? 'SHOW ALL' : 'SHOW ONLY NEW' }}"
          cssClass="show-new-btn" tap="{{ toggleShowNew }}" />

        <!-- Featured examples -->
        <GridLayout visibility="{{ selectedScreen===0 ? 'visible' : 'collapsed' }}" row="2" columns="*" rows="*">
          <ScrollView>
            <Repeater items="{{ featuredExamples }}">
              <Repeater.itemsLayout>

                <!-- TODO: The WrapLayout can handle better the multy-column request.
                  In the best scenario we will set minimum-width of an item
                  and have the panel accomodate as much equal sized columns as possible. -->
                <!-- TODO: Sticking to 2 columns won't look nice on landscape and tablets. -->
                <!-- NOTE: In iOS iPhone-6 iOS 8.3 if we do not subtract 1px the grind will show only one column. -->
                <!-- TODO: When the orientation is changed for a first time this doesn't seem to re-evaluate on iOS. It works on subsequent rotations. -->
                <WrapLayout horizontalAlignment="left" itemWidth="{{ useListLayout ? (screenWidth - 1) : (screenWidth - 1) / 2 }}" />
              </Repeater.itemsLayout>
              <Repeater.itemTemplate>
                <StackLayout tap="navigateToExample" cssClass="example-item"
                  orientation="{{ $parents['Repeater'].useListLayout, $parents['Repeater'].useListLayout ? 'horizontal' : 'vertical' }}"
                  visibility="{{ $parents['Repeater'].showOnlyNew, (!$parents['Repeater'].showOnlyNew || isNew) ? 'visible' : 'collapsed' }}">

                  <GridLayout columns="*" rows="*"
                      cssClass="{{ $parents['Repeater'].useListLayout, $parents['Repeater'].useListLayout ? 'example-img-list' : 'example-img-wrap' }}">
                    <Image src="{{ image }}" cssClass="{{ isNew ? 'list-example-image-new' : 'list-example-image' }}" stretch="aspectFit" />
                    <Image src="res://ic_new" cssClass="new" visibility="{{ isNew ? 'visible' : 'collapsed' }}" stretch="none" />
                  </GridLayout>

                  <StackLayout>
                    <Label text="{{ title }}" 
                      cssClass="{{ $parents['Repeater'].useListLayout, $parents['Repeater'].useListLayout ? 'example-title-list' : 'example-title-wrap' }}" />
                    <Label text="{{ controls }}" textWrap="true"
                      cssClass="{{ $parents['Repeater'].useListLayout, $parents['Repeater'].useListLayout ? 'used-controls-list' : 'used-controls-wrap' }}"/>
                  </StackLayout>
                </StackLayout>
              </Repeater.itemTemplate>
            </Repeater>
          </ScrollView>
        </GridLayout>

        <!-- All examples -->
        <GridLayout visibility="{{ selectedScreen===1 ? 'visible' : 'collapsed' }}" row="2" columns="*" rows="*">
          <Repeater items="{{ exampleGroups }}">
            <Repeater.itemsLayout>

              <!-- TODO: The WrapLayout can handle better the multy-column request.
                  In the best scenario we will set minimum-width of an item
                  and have the panel accomodate as much equal sized columns as possible. -->
              <!-- TODO: Sticking to 2 columns won't look nice on landscape and tablets. -->
              <!-- NOTE: In iOS iPhone-6 iOS 8.3 if we do not subtract 1px the grind will show only one column. -->
              <WrapLayout horizontalAlignment="left" itemWidth="{{ useListLayout ? (screenWidth - 1) : (screenWidth - 1) / 2 }}" />
            </Repeater.itemsLayout>
            <Repeater.itemTemplate>
              <GridLayout tap="navigateToExampleGroup" orientation="horizontal" cssClass="no-image-example-item" ios:columns="42, *" android:columns="72, *" rows="42"
                visibility="{{ $parents['Repeater'].showOnlyNew, (!$parents['Repeater'].showOnlyNew || isNew) ? 'visible' : 'collapsed' }}">
                <Label col="1" text="{{ title }}"
                  cssClass="example-title-list" verticalAlignment="center" />
                <Image src="res://ic_new" cssClass="new" visibility="{{ isNew ? 'visible' : 'collapsed' }}" stretch="none" />
              </GridLayout>
            </Repeater.itemTemplate>
          </Repeater>
        </GridLayout>
      </GridLayout>
    </drawer:RadSideDrawer.mainContent>
  </drawer:RadSideDrawer>
</Page>
